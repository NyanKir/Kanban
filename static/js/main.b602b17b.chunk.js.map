{"version":3,"sources":["inital-data.js","components/task.js","components/form.js","components/button.js","components/column.js","index.js"],"names":["initalData","tasks","id","content","columns","title","tasksIDs","columnOrder","Container","styled","div","props","isDragging","Task","draggableId","this","task","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Close","onClick","removeTask","column","React","Component","StyledTextarea","textarea","error","ButtonPosition","Button","primary","Form","state","value","handleChange","bind","handlerTextarea","event","setState","target","addNewTask","changeShow","onChange","Plus","span","showForm","Title","Tasks","isDraggingOver","Column","removeColumn","droppableId","type","droppableProps","map","key","placeholder","Wrapper","AddColumnWrapper","App","lastTask","Object","keys","slice","undefined","parseInt","length","listTasks","listColumns","push","newState","onDragEnd","result","destination","source","console","log","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newTaskIds","newColumn","newColumnOrder","addColumn","idColumn","parseFloat","direction","columnId","taskId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b602b17b.chunk.js","sourcesContent":["const initalData={\r\n    tasks:{\r\n        'task-1':{id:'task-1', content:'Приготовить завтрак'},\r\n        'task-2':{id:'task-2', content:'Сходить на работу'},\r\n        'task-3':{id:'task-3', content:'Ответить на сообщения'},\r\n        'task-4':{id:'task-4', content:'Приготовить ужин'}\r\n    },\r\n    columns:{\r\n        'columns-1':{\r\n            id:'columns-1',\r\n            title:'Сегодня',\r\n            tasksIDs:['task-1','task-2','task-3','task-4'],\r\n        },\r\n        'columns-2':{\r\n            id:'columns-2',\r\n            title:'В процессе',\r\n            tasksIDs:[],\r\n        },\r\n        'columns-3':{\r\n            id:'columns-3',\r\n            title:'Сделано',\r\n            tasksIDs:[],\r\n        }\r\n    },\r\n    columnOrder:['columns-1','columns-2','columns-3']\r\n};\r\nexport default initalData","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\nimport {Close} from \"./column\";\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    border: 1px solid lightgray;\r\n    margin-bottom: 9px;\r\n    padding: 8px;\r\n    background-color: ${props=>(props.isDragging)? 'lightgreen':'white'};\r\n`;\r\nexport default class Task extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <Draggable draggableId={this.props.task.id} index={this.props.index}>\r\n                {\r\n                    (provided, snapshot)=>(\r\n                        <Container {...provided.draggableProps}\r\n                                   {...provided.dragHandleProps} ref={provided.innerRef} isDragging={snapshot.isDragging}>\r\n                            <span>{this.props.task.content}</span>\r\n                            <Close onClick={()=>this.props.removeTask(this.props.task,this.props.column,this.props.index)}>&#215;</Close>\r\n                        </Container>\r\n                    )\r\n                }\r\n\r\n            </Draggable>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n        padding:8px;\r\n`;\r\nconst StyledTextarea = styled.textarea`\r\n    width: -webkit-fill-available;\r\n    resize: vertical;\r\n    border: 1px solid lightgrey;\r\n    border-radius: 2px;\r\n    outline:none;\r\n    box-shadow: 0 0 5px ${props=> props.error? \"red\" : \"#00abfa\"};\r\n\r\n`\r\nconst ButtonPosition=styled.div`\r\n    margin-top: 3px;\r\n    justify-content: space-between;\r\n    display: flex;\r\n`\r\nconst Button=styled.div`\r\n    border-radius: 2px;\r\n    padding: 5px 15px;\r\n    background: ${props=>props.primary ? \"lightgreen\": \"palevioletred\"};\r\n    cursor:pointer;\r\n     \r\n`\r\nexport  default class Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={value:'',error:false}\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handlerTextarea=this.handlerTextarea.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    handlerTextarea(){\r\n        const result = this.props.addNewTask(this.props.column,this.state.value);\r\n        if(result){\r\n            this.setState({error: true});\r\n        }else {\r\n            this.setState({error: false});\r\n            this.props.changeShow()\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <StyledTextarea value={this.state.value} onChange={this.handleChange} error={this.state.error}/>\r\n                <ButtonPosition>\r\n                    <Button primary onClick={()=> this.handlerTextarea()}>Готово</Button>\r\n                    <Button onClick={()=> this.props.changeShow()}>Отмена</Button>\r\n                </ButtonPosition>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Form from \"./form\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items:center;\r\n    padding:8px;\r\n    cursor:pointer;\r\n    &:hover{\r\n        transition:.3s ease;\r\n        background-color:#b0b0b0;\r\n    }\r\n`\r\nconst Plus=styled.span`\r\n    height: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 5px;\r\n    font-size:34px\r\n`\r\n\r\n\r\nexport default class Button extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {showForm: false}\r\n        this.changeShow=this.changeShow.bind(this)\r\n    }\r\n\r\n    changeShow(){\r\n        this.setState({showForm:!this.state.showForm})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            (this.state.showForm)\r\n                ? <Form addNewTask={this.props.addNewTask} column={this.props.column} changeShow={this.changeShow}/>\r\n                :\r\n                <Container onClick={() => this.changeShow()}>\r\n                    <Plus>&#43;</Plus>\r\n                    <span>Добавить задание</span>\r\n                </Container>\r\n\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Task from \"./task\";\r\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport Button from \"./button\";\r\n\r\nconst Container = styled.div`\r\nwhite-space: pre;\r\n    transition:background-color .3s ease;\r\n    background-color: #cfcfcf;\r\n    height: fit-content;\r\n    max-width: 300px;\r\n    width: 300px;\r\n    margin: 0px 8px;\r\n    border: 1px solid lightgrey;\r\n    border-radius: 2px;\r\n`;\r\nconst Title = styled.div`\r\n    padding:8px;\r\n    display: flex;\r\n    justify-content:space-between\r\n`;\r\nconst Tasks = styled.div`\r\n    overflow-y:scroll;\r\n    max-height:70vh;\r\n    padding: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content:space-between;\r\n    transition: background-color .2s ease;\r\n    background-color: ${props=>(props.isDraggingOver)? 'skyblue':'white'};\r\n`;\r\nexport const Close=styled.span`\r\n    cursor:pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 5px;\r\n    font-size:34px;    \r\n    transition:.3s; \r\n    height: ${props=> props.primary ? 'auto':'20px'};\r\n    \r\n\r\n    &:hover{\r\n        transition:.3s;\r\n        color:palevioletred;\r\n    }\r\n`;\r\n\r\n\r\nexport default class Column extends React.Component {\r\n    render() {\r\n        return (\r\n            <Draggable draggableId={this.props.column.id} index={this.props.index}>\r\n                {(provided)=>(\r\n                    <Container {...provided.draggableProps} ref={provided.innerRef}>\r\n                        <Title {...provided.dragHandleProps}>\r\n                            <h3>{this.props.column.title}</h3>\r\n                            <Close onClick={()=>this.props.removeColumn(this.props.column,this.props.index)} primary>&#215;</Close>\r\n                        </Title>\r\n\r\n                        <Droppable droppableId={this.props.column.id} type=\"mask\">\r\n                            {(provided,snapshot) =>\r\n                                (\r\n                                    <Tasks ref={provided.innerRef} {...provided.droppableProps} isDraggingOver={snapshot.isDraggingOver}>\r\n                                        {this.props.tasks.map((task, index) => <Task key={task.id} task={task} index={index} removeTask={this.props.removeTask} column={this.props.column}/>)}\r\n                                        {provided.placeholder}\r\n                                    </Tasks>\r\n                                )}\r\n                        </Droppable>\r\n                        <Button addNewTask={this.props.addNewTask} column={this.props.column}/>\r\n                    </Container>\r\n                )}\r\n            </Draggable>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\r\nimport initalData from \"./inital-data\"\r\nimport styled from \"styled-components\";\r\nimport Column from \"./components/column\";\r\nimport Button from \"./components/button\";\r\nimport \"./style/index.scss\";\r\n\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n`\r\nconst Wrapper =styled.div`\r\n    display:flex;\r\n    font-family: Roboto,-apple-system,BlinkMacSystemFont,sans-serif;\r\n    \r\n`\r\nconst AddColumnWrapper=styled.div`\r\n    max-width: 300px;\r\n    min-width: 300px;\r\n    background: #cfcfcf;\r\n    border-radius: 2px;\r\n    height: fit-content;\r\n`\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initalData\r\n        this.onDragEnd = this.onDragEnd.bind(this)\r\n        this.addNewTask = this.addNewTask.bind(this)\r\n        this.removeColumn = this.removeColumn.bind(this)\r\n        this.removeTask = this.removeTask.bind(this)\r\n        this.addColumn = this.addColumn.bind(this)\r\n    }\r\n    addColumn(column,value){\r\n        if(!value){\r\n            return true;\r\n        }\r\n        this.setState((state)=>{\r\n            const columnOrder=state.columnOrder;\r\n            let idColumn, column={};\r\n            if(columnOrder.length !==0){\r\n                idColumn=`columns-${parseFloat(columnOrder.slice(-1)[0].slice(-1))+1}`;\r\n            }else{\r\n                idColumn='columns-1';\r\n            }\r\n            columnOrder.push(idColumn)\r\n            column[idColumn]={\r\n                id:idColumn,\r\n                title:value,\r\n                tasksIDs:[],\r\n            }\r\n            return{\r\n                ...state,\r\n                columns:{\r\n                    ...state.columns,\r\n                    ...column\r\n                },\r\n                columnOrder: columnOrder,\r\n            }\r\n        })\r\n    }\r\n    //Удаление колонны\r\n    removeColumn(column,index){\r\n        delete this.state.columns[column.id];\r\n        this.state.columnOrder.splice(index,1)\r\n        this.setState({\r\n            ...this.state\r\n        })\r\n    }\r\n\r\n    //Удаление задания\r\n    removeTask(task,column,index){\r\n        this.setState((state)=>{\r\n\r\n            const tasks=state.tasks;\r\n            delete tasks[task.id]\r\n            column.tasksIDs.splice(index,1)\r\n            return{\r\n                ...state,\r\n                columns:{\r\n                    ...state.columns,\r\n                    column\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    //Обработчик добавления задания\r\n    addNewTask=(column,value)=>{\r\n        if(!value){\r\n            return true;\r\n        }\r\n\r\n        let task;\r\n        const lastTask=Object.keys(this.state.tasks).slice(-1)[0];\r\n        if(lastTask=== undefined){\r\n            task =`task-1`;\r\n        }else{\r\n            task=`task-${parseInt(lastTask[lastTask.length-1])+1}`;\r\n\r\n        }\r\n        const listTasks =this.state.tasks;\r\n        const listColumns =this.state.columns;\r\n\r\n        listTasks[task]={id:task,content:value}\r\n        column.tasksIDs.push(task)\r\n        listColumns[column.id]=column\r\n        const newState={\r\n            ...this.state,\r\n            tasks:listTasks,\r\n            columns:listColumns\r\n\r\n        }\r\n        this.setState(newState)\r\n    }\r\n\r\n    //Обработчик падения\r\n    onDragEnd = result => {\r\n\r\n        const {destination, source, draggableId,type} = result;\r\n        console.log({destination, source, draggableId})\r\n\r\n        if (!destination) {\r\n            return\r\n        }\r\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n            return;\r\n        }\r\n\r\n        //If moving column\r\n        if(type===\"column\"){\r\n            const newColumnOrder=Array.from(this.state.columnOrder);\r\n            newColumnOrder.splice(source.index,1);\r\n            newColumnOrder.splice(destination.index,0,draggableId);\r\n\r\n            const newState={\r\n                ...this.state,\r\n                columnOrder: newColumnOrder\r\n            }\r\n            this.setState(newState);\r\n            return;\r\n        }\r\n\r\n        const start = this.state.columns[source.droppableId];\r\n        const finish = this.state.columns[destination.droppableId];\r\n\r\n        if (start === finish) {\r\n            const newTaskIds = Array.from(start.tasksIDs);\r\n            newTaskIds.splice(source.index, 1);\r\n            newTaskIds.splice(destination.index, 0, draggableId);\r\n\r\n            const newColumn = {\r\n                ...start,\r\n                tasksIDs: newTaskIds,\r\n            }\r\n            const newState = {\r\n                ...this.state,\r\n                columns: {\r\n                    ...this.state.columns,\r\n                    [newColumn.id]: newColumn,\r\n                },\r\n            }\r\n            this.setState(newState)\r\n            return;\r\n        }\r\n\r\n\r\n        // Moving from one list to another\r\n        const startTaskIds = Array.from(start.tasksIDs);\r\n        startTaskIds.splice(source.index, 1)\r\n        const newStart = {\r\n            ...start,\r\n            tasksIDs: startTaskIds,\r\n        };\r\n\r\n        const finishTaskIds = Array.from(finish.tasksIDs);\r\n        finishTaskIds.splice(destination.index, 0, draggableId);\r\n        const newFinish = {\r\n            ...finish,\r\n            tasksIDs: finishTaskIds,\r\n        };\r\n\r\n        const newState = {\r\n            ...this.state,\r\n            columns: {\r\n                ...this.state.columns,\r\n                [newStart.id]: newStart,\r\n                [newFinish.id]: newFinish,\r\n            }\r\n        }\r\n\r\n        this.setState(newState)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                <DragDropContext onDragEnd={this.onDragEnd}>\r\n                    <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\r\n                        {\r\n                            (provided) => (\r\n                                <Container {...provided.droppableProps} ref={provided.innerRef}>\r\n\r\n                                    {\r\n                                        this.state.columnOrder.map((columnId, index) => {\r\n                                            const column = this.state.columns[columnId];\r\n                                            const tasks = column.tasksIDs.map((taskId) => this.state.tasks[taskId])\r\n                                            return <Column\r\n                                                tasks={tasks}\r\n                                                column={column}\r\n                                                key={columnId}\r\n                                                index={index}\r\n                                                addNewTask={this.addNewTask}\r\n                                                removeTask={this.removeTask}\r\n                                                removeColumn={this.removeColumn}\r\n                                            />\r\n                                        })\r\n                                    }\r\n\r\n                                    {provided.placeholder}\r\n                                </Container>\r\n                            )\r\n                        }\r\n\r\n                    </Droppable>\r\n                </DragDropContext>\r\n                <AddColumnWrapper>\r\n                    <Button addNewTask={this.addColumn} column={true}/>\r\n                </AddColumnWrapper>\r\n            </Wrapper>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}